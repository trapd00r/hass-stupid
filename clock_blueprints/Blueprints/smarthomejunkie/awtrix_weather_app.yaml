blueprint:
  name: Awtrix Weather App
  description: Show Weather on the Ulanzi Clock
  domain: automation
  author: Smart Home Junkie
  input:
    awtrix_display:
      name: Awtrix Display
      description: Select the target Awtrix display.
      selector:
        device:
          model: "AWTRIX Light"
    toggle_helper:
      name: Toggle Helper
      description: Select the Toggle Helper that will toggle the App on or off.
      selector:
        entity:
          domain: input_boolean
    my_sensor:
      name: Sensor
      description: Select your Weather Sensor.
      selector:
        entity:
          domain: weather
    show_temperature:
      name: Show temperature
      description: Should the temperature be shown?
      selector:
        boolean:
      default: true
    show_windspeed:
      name: Show Wind Speed
      description: Should the wind speed be shown?
      selector:
        boolean:
      default: true
    push_icon:
      name: Push Icon
      description: Icon behavior
      selector:
        select:
          options:
            - label: "Icon doesn't move"
              value: "0"
            - label: "Icon moves with text and will not appear again"
              value: "1"
            - label: "Icon moves with text but appears again when the text starts"
              value: "2"
          mode: dropdown
      default: "2"
    text_case:
      name: Text Case
      description: Select how you would like your text to display.
      selector:
        select:
          options:
            - label: "Use global setting"
              value: "0"
            - label: "Force Uppercase"
              value: "1"
            - label: "Show as you entered it"
              value: "2"
          mode: dropdown
      default: "0"
    background_color:
      name: Background Color
      description: Select the Background color
      selector:
        color_rgb:
      default: [0, 0, 0]
    text_color:
      name: Text Color
      description: Select the Text color
      selector:
        color_rgb:
      default: [255, 255, 255]
    show_rainbow:
      name: Rainbow Colors
      description: Should the notification be shown in Rainbow colors?
      selector:
        boolean:
      default: false
    duration:
      name: Duration (in seconds)
      description: Sets how long the app should be displayed. 0 is global app time.
      default: "0"
    lifetime:
      name: Lifetime (in seconds)
      description: Sets how long the app should stay alive before it gets removed from the app cycle automatically. 0 is infinite lifetime.
      default: "0"

trigger:
  - platform: state
    entity_id: !input toggle_helper
    to: "on"
    id: "On"
  - platform: state
    entity_id: !input toggle_helper
    to: "off"
    id: "Off"
  - platform: state
    entity_id: !input my_sensor
    id: Changes
    enabled: true

variables:
  device_id: !input awtrix_display
  my_display: >
    {{ iif( device_attr(device_id, 'name_by_user') != none, device_attr(device_id, 'name_by_user'), device_attr(device_id, 'name') ) }}
  my_sensor: !input my_sensor
  push_icon: !input push_icon
  text_case: !input text_case
  show_rainbow: !input show_rainbow
  background_color: !input background_color
  text_color: !input text_color
  my_toggle_helper: toggle_helper
  my_duration: !input duration
  show_temperature: !input show_temperature
  show_windspeed: !input show_windspeed
  my_text: >
    {{ states(my_sensor) }}
    {%- if (show_temperature) -%}
      {{ ' ' }}{{ state_attr(my_sensor, 'temperature') }}{{state_attr(my_sensor, "temperature_unit")}}
    {%- endif -%}
    {%- if (show_windspeed) -%}
      {{ ' - ' }}{{ state_attr(my_sensor, "wind_speed" ) }}{{ state_attr(my_sensor, "wind_speed_unit") }}
    {%- endif -%}
  my_lifetime: !input lifetime
  app_name: >
    {{ my_sensor | trim }}
  weather_mapper:
    rainy: 72
    cloudy: 26488
    fog: 12196
    hail: 2441
    snowy: 4702
    sunny: 2282
    windy: 3363
    lightning: 630
    pouring: 49300
    partlycloudy: 13852
    clear-night: 12181

action:
  - choose:
      - conditions:
          - condition: trigger
            id: "On"
        sequence:
          - service: mqtt.publish
            data:
              qos: 0
              retain: false
              topic: "{{my_display}}/custom/{{app_name}}"
              payload: |-
                {   
                  "text": "{{ my_text }}",
                  "color": {{text_color}},
                  "background": {{ background_color }},
                  "icon": "{{ states(my_sensor) }}",
                  "textCase": "{{ text_case }}",
                  "pushIcon": "{{ push_icon }}",
                  "rainbow": {{ iif(show_rainbow, "true", "false") }},
                  "duration": "{{ my_duration }}",
                  "lifetime": "{{ my_lifetime }}"
                }
          - service: mqtt.publish
            data:
              qos: 0
              retain: false
              topic: "{{my_display}}/switch"
              payload: |-
                {   
                  "name": "{{app_name}}"
                }
      - conditions:
          - condition: trigger
            id: "Off"
        sequence:
          - service: mqtt.publish
            data:
              qos: 0
              retain: false
              topic: "{{my_display}}/custom/{{app_name}}"
      - conditions:
          - condition: and
            conditions:
              - condition: trigger
                id: Changes
              - condition: state
                entity_id: !input toggle_helper
                state: "on"
        sequence:
          - service: mqtt.publish
            data:
              qos: 0
              retain: false
              topic: "{{my_display}}/custom/{{app_name}}"
              payload: |-
                {   
                  "text": "{{ my_text }}",
                  "color": {{text_color}},
                  "background": {{ background_color }},
                  "icon": "{{ states(my_sensor) }}",
                  "textCase": "{{ text_case }}",
                  "pushIcon": "{{ push_icon }}",
                  "rainbow": {{ iif(show_rainbow, "true", "false") }},
                  "duration": "{{ my_duration }}",
                  "lifetime": "{{ my_lifetime }}"
                }
